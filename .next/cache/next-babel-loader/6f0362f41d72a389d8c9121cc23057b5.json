{"ast":null,"code":"var _jsxFileName = \"D:\\\\LABS\\\\PROCLUB\\\\probation-next-js\\\\pages\\\\index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from 'react';\nexport default (() => {\n  const {\n    0: todos,\n    1: setTodos\n  } = useState(['todo 1', 'todo 2']);\n  const {\n    0: todo,\n    1: setTodo\n  } = useState('');\n  return __jsx(React.Fragment, null, __jsx(\"input\", {\n    value: todo,\n    onChange: e => setTodos(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }\n  }), __jsx(\"button\", {\n    onClick: () => setTodos([...todos, todo]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }\n  }, \"Add\"), todos.map(todo => __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }\n  }, todo)));\n});","map":{"version":3,"sources":["D:/LABS/PROCLUB/probation-next-js/pages/index.js"],"names":["useState","todos","setTodos","todo","setTodo","e","target","value","map"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,gBAAe,MAAM;AACjB,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBF,QAAQ,CAAC,CAAC,QAAD,EAAU,QAAV,CAAD,CAAlC;AACA,QAAM;AAAA,OAACG,IAAD;AAAA,OAAOC;AAAP,MAAkBJ,QAAQ,CAAC,EAAD,CAAhC;AACA,SACI,4BACA;AAAO,IAAA,KAAK,EAAEG,IAAd;AAAqB,IAAA,QAAQ,EAAGE,CAAD,IAAOH,QAAQ,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV,CAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAEA;AAAQ,IAAA,OAAO,EAAI,MAAML,QAAQ,CAAC,CAAC,GAAID,KAAL,EAAYE,IAAZ,CAAD,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAFA,EAGCF,KAAK,CAACO,GAAN,CAAUL,IAAI,IACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,IAAL,CADH,CAHD,CADJ;AASH,CAZD","sourcesContent":["import { useState } from 'react';\r\n\r\nexport default () => {\r\n    const [todos, setTodos] = useState(['todo 1','todo 2']);\r\n    const [todo, setTodo] = useState('');\r\n    return (\r\n        <>\r\n        <input value={todo}  onChange={(e) => setTodos(e.target.value)} />\r\n        <button onClick = {() => setTodos([... todos, todo])}>Add</button>  \r\n        {todos.map(todo => (\r\n            <h1>{todo}</h1>\r\n        ))}\r\n        </>\r\n    );\r\n};\r\n    "]},"metadata":{},"sourceType":"module"}